/*
 * RenamerView.java
 */

package renamer.UI;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.io.IOException;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.SpinnerNumberModel;
import renamer.SRC.AppInfo;
import renamer.SRC.Model;
import renamer.SRC.RenamingEngine;

/**
 * The application's main frame.
 */
public class RenamerView extends FrameView {
    private Model model = null;
    public static final String ExampleFileName = "AcDc-Highway to hell.mp3";
    public static final String EtqDirRes = "res";
    public static final String EtqIconName = "FileRenamer.png";
    public static final String[] MsgSureRename = {
        "Do you really want to rename files in directory '",
        "¿Desea renombrar los archivos en el directorio '"
    };

    public static final String[] MsgSureDelete = {
        "Do you really want to delete file '",
        "¿Desea realmente eliminar el archivo '"
    };

    public static final String[] MsgReady = {
        "Ready...",
        "Preparado..."
    };

    public static final String[] MsgWorking = {
        "Thinking...",
        "Pensando..."
    };

    public final String[] MsgHelp = { AppInfo.Help_EN, AppInfo.Help_ES };
    public final String[] MsgExplorerHelp = {
            "Double-click a file to rename it.\nDouble-click a directory to enter it.",
            "Haga doble-click en un archivo para renombrarlo.\nHaga doble-click en un directorio para entrar en él."
    };
    private RenamingEngine renameEngine = null;

    private static FrameView frame = null;
    public static JFrame getJFrame() {
        return frame.getFrame();
    }

    public RenamerView(SingleFrameApplication app) {
        super(app);

        initComponents();
        Dimension size = new Dimension( 600, 475 );
        frame = this;
        this.getFrame().setMinimumSize( size );
        this.getFrame().setPreferredSize( size );

        this.getFrame().setTitle( AppInfo.Name );
        spinStart.setModel( new SpinnerNumberModel( 1, 1, Integer.MAX_VALUE, 1 ) );
        this.getFrame().setMinimumSize( new Dimension( 600, 400  ) );
        this.getFrame().setPreferredSize(this.getFrame().getMinimumSize() );
        pnlOptions.setVisible( false );
        advancedOptionsMenuItem.setSelected( false );
        filterOptionsMenuItem.setSelected( true );
        cbForceNumbering.setSelected( true );

        // Set icon
        try {
            ImageIcon iconImg = new ImageIcon(
                       getClass().getResource( "/" + EtqDirRes + "/" + EtqIconName
            ) );
            this.getFrame().setIconImage( iconImg.getImage() );
            Image btImg = iconImg.getImage().getScaledInstance( 16, 16, Image.SCALE_SMOOTH );
            btRename.setIcon( new ImageIcon( btImg ) );
        } catch(Exception e)
        {
            Util.msgError( "Imposible to apply icon"
                    + ( e.getMessage() != null ? ( ":\n" + e.getMessage() ): "" )
            );
        }

        // Prepare application
        String dirInit = System.getProperty( "user.home" );

        if ( dirInit == null ) {
            dirInit = ".";
        }

        model = new Model( new File( dirInit ) );
        this.changeUIIntoSpanish();
        model.setLanguage( Model.Language.ES );
        renameEngine = new RenamingEngine( model );
        this.setStatus();
        this.updateUI();
    }

    @Action
    public void showAboutBox() {
        if ( aboutBox == null ) {
            JFrame mainFrame = RenamerApp.getApplication().getMainFrame();
            aboutBox = new RenamerAboutBox( mainFrame, model );
            aboutBox.setLocationRelativeTo( mainFrame );
        }

        RenamerApp.getApplication().show( aboutBox );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        pnlOptions = new javax.swing.JPanel();
        cbRecurse = new javax.swing.JCheckBox();
        cbSubstituteSpaces = new javax.swing.JCheckBox();
        cbForceNumbering = new javax.swing.JCheckBox();
        cbEliminateSpaces = new javax.swing.JCheckBox();
        pnlFilter = new javax.swing.JPanel();
        cbPrefix = new javax.swing.JCheckBox();
        cbExt = new javax.swing.JCheckBox();
        edPrefix = new javax.swing.JTextField();
        edExt = new javax.swing.JTextField();
        pnlNewName = new javax.swing.JPanel();
        lblNewName = new javax.swing.JLabel();
        lblStartIn = new javax.swing.JLabel();
        spinStart = new javax.swing.JSpinner();
        edName = new javax.swing.JTextField();
        btHelp = new javax.swing.JButton();
        btCheck = new javax.swing.JButton();
        pnlDirectoryNavigation = new javax.swing.JPanel();
        lblFolder = new javax.swing.JLabel();
        edCurrentDir = new javax.swing.JTextField();
        btOpenFolder = new javax.swing.JButton();
        btDirUp = new javax.swing.JButton();
        pnlFileManagement = new javax.swing.JPanel();
        btDeleteFile = new javax.swing.JButton();
        btRename = new javax.swing.JButton();
        btRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFiles = new javax.swing.JList();
        btHelpFileExplorer = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        selectFolderMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        renameMenuItem = new javax.swing.JMenuItem();
        sortMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        filterOptionsMenuItem = new javax.swing.JCheckBoxMenuItem();
        advancedOptionsMenuItem = new javax.swing.JCheckBoxMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();
        languageMenu = new javax.swing.JMenu();
        spanishLanguage = new javax.swing.JCheckBoxMenuItem();
        englishLanguage = new javax.swing.JCheckBoxMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();

        mainPanel.setName("mainPanel"); // NOI18N

        pnlOptions.setName("pnlOptions"); // NOI18N

        cbRecurse.setName("cbRecurse"); // NOI18N
        cbRecurse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRecurseActionPerformed(evt);
            }
        });

        cbSubstituteSpaces.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        cbSubstituteSpaces.setName("cbSubstituteSpaces"); // NOI18N
        cbSubstituteSpaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSubstituteSpacesActionPerformed(evt);
            }
        });

        cbForceNumbering.setName("cbForceNumbering"); // NOI18N
        cbForceNumbering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbForceNumberingActionPerformed(evt);
            }
        });

        cbEliminateSpaces.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        cbEliminateSpaces.setName("cbEliminateSpaces"); // NOI18N
        cbEliminateSpaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEliminateSpacesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOptionsLayout = new javax.swing.GroupLayout(pnlOptions);
        pnlOptions.setLayout(pnlOptionsLayout);
        pnlOptionsLayout.setHorizontalGroup(
            pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOptionsLayout.createSequentialGroup()
                        .addComponent(cbRecurse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 391, Short.MAX_VALUE)
                        .addComponent(cbSubstituteSpaces))
                    .addGroup(pnlOptionsLayout.createSequentialGroup()
                        .addComponent(cbForceNumbering)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 391, Short.MAX_VALUE)
                        .addComponent(cbEliminateSpaces)))
                .addContainerGap())
        );
        pnlOptionsLayout.setVerticalGroup(
            pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbSubstituteSpaces)
                    .addComponent(cbRecurse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbForceNumbering)
                    .addComponent(cbEliminateSpaces))
                .addContainerGap())
        );

        pnlFilter.setName("pnlFilter"); // NOI18N

        cbPrefix.setName("cbPrefix"); // NOI18N
        cbPrefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPrefixActionPerformed(evt);
            }
        });

        cbExt.setName("cbExt"); // NOI18N
        cbExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbExtActionPerformed(evt);
            }
        });

        edPrefix.setEditable(false);
        edPrefix.setEnabled(false);
        edPrefix.setName("edPrefix"); // NOI18N
        edPrefix.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                edPrefixCaretUpdate(evt);
            }
        });

        edExt.setEditable(false);
        edExt.setEnabled(false);
        edExt.setName("edExt"); // NOI18N
        edExt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                edExtCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout pnlFilterLayout = new javax.swing.GroupLayout(pnlFilter);
        pnlFilter.setLayout(pnlFilterLayout);
        pnlFilterLayout.setHorizontalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFilterLayout.createSequentialGroup()
                        .addComponent(cbPrefix)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edPrefix, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                    .addGroup(pnlFilterLayout.createSequentialGroup()
                        .addComponent(cbExt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edExt, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlFilterLayout.setVerticalGroup(
            pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPrefix))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbExt))
                .addContainerGap())
        );

        pnlNewName.setName("pnlNewName"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(renamer.UI.RenamerApp.class).getContext().getResourceMap(RenamerView.class);
        lblNewName.setText(resourceMap.getString("lblNewName.text")); // NOI18N
        lblNewName.setName("lblNewName"); // NOI18N

        lblStartIn.setText(resourceMap.getString("lblStartIn.text")); // NOI18N
        lblStartIn.setName("lblStartIn"); // NOI18N

        spinStart.setName("spinStart"); // NOI18N
        spinStart.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinStartStateChanged(evt);
            }
        });

        edName.setName("edName"); // NOI18N
        edName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                edNameCaretUpdate(evt);
            }
        });

        btHelp.setIcon(resourceMap.getIcon("btHelp.icon")); // NOI18N
        btHelp.setText(resourceMap.getString("btHelp.text")); // NOI18N
        btHelp.setName("btHelp"); // NOI18N
        btHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHelpActionPerformed(evt);
            }
        });

        btCheck.setIcon(resourceMap.getIcon("btCheck.icon")); // NOI18N
        btCheck.setName("btCheck"); // NOI18N
        btCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNewNameLayout = new javax.swing.GroupLayout(pnlNewName);
        pnlNewName.setLayout(pnlNewNameLayout);
        pnlNewNameLayout.setHorizontalGroup(
            pnlNewNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewNameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNewName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edName, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStartIn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinStart, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btHelp)
                .addContainerGap())
        );
        pnlNewNameLayout.setVerticalGroup(
            pnlNewNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewNameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNewNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNewNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(edName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spinStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblStartIn)
                        .addComponent(lblNewName))
                    .addGroup(pnlNewNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btCheck)
                        .addComponent(btHelp)))
                .addContainerGap())
        );

        pnlDirectoryNavigation.setName("pnlDirectoryNavigation"); // NOI18N

        lblFolder.setText(resourceMap.getString("lblFolder.text")); // NOI18N
        lblFolder.setName("lblFolder"); // NOI18N

        edCurrentDir.setEditable(false);
        edCurrentDir.setName("edCurrentDir"); // NOI18N

        btOpenFolder.setIcon(resourceMap.getIcon("btOpenFolder.icon")); // NOI18N
        btOpenFolder.setText(resourceMap.getString("btOpenFolder.text")); // NOI18N
        btOpenFolder.setName("btOpenFolder"); // NOI18N
        btOpenFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOpenFolderActionPerformed(evt);
            }
        });

        btDirUp.setIcon(resourceMap.getIcon("btDirUp.icon")); // NOI18N
        btDirUp.setText(resourceMap.getString("btDirUp.text")); // NOI18N
        btDirUp.setName("btDirUp"); // NOI18N
        btDirUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDirUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDirectoryNavigationLayout = new javax.swing.GroupLayout(pnlDirectoryNavigation);
        pnlDirectoryNavigation.setLayout(pnlDirectoryNavigationLayout);
        pnlDirectoryNavigationLayout.setHorizontalGroup(
            pnlDirectoryNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDirectoryNavigationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFolder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edCurrentDir, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btDirUp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btOpenFolder)
                .addContainerGap())
        );
        pnlDirectoryNavigationLayout.setVerticalGroup(
            pnlDirectoryNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDirectoryNavigationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDirectoryNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDirectoryNavigationLayout.createSequentialGroup()
                        .addGroup(pnlDirectoryNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edCurrentDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFolder))
                        .addGap(7, 7, 7))
                    .addComponent(btDirUp)
                    .addComponent(btOpenFolder))
                .addContainerGap())
        );

        pnlFileManagement.setName("pnlFileManagement"); // NOI18N

        btDeleteFile.setIcon(resourceMap.getIcon("btDeleteFile.icon")); // NOI18N
        btDeleteFile.setName("btDeleteFile"); // NOI18N
        btDeleteFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteFileActionPerformed(evt);
            }
        });

        btRename.setName("btRename"); // NOI18N
        btRename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRenameActionPerformed(evt);
            }
        });

        btRefresh.setIcon(resourceMap.getIcon("btRefresh.icon")); // NOI18N
        btRefresh.setName("btRefresh"); // NOI18N
        btRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefreshActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listFiles.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listFiles.setName("listFiles"); // NOI18N
        listFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listFilesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listFiles);

        btHelpFileExplorer.setIcon(resourceMap.getIcon("btHelpFileExplorer.icon")); // NOI18N
        btHelpFileExplorer.setText(resourceMap.getString("btHelpFileExplorer.text")); // NOI18N
        btHelpFileExplorer.setName("btHelpFileExplorer"); // NOI18N
        btHelpFileExplorer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHelpFileExplorerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFileManagementLayout = new javax.swing.GroupLayout(pnlFileManagement);
        pnlFileManagement.setLayout(pnlFileManagementLayout);
        pnlFileManagementLayout.setHorizontalGroup(
            pnlFileManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFileManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFileManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addGroup(pnlFileManagementLayout.createSequentialGroup()
                        .addComponent(btHelpFileExplorer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDeleteFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRename)))
                .addContainerGap())
        );
        pnlFileManagementLayout.setVerticalGroup(
            pnlFileManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFileManagementLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFileManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btRename)
                    .addComponent(btDeleteFile)
                    .addComponent(btRefresh)
                    .addComponent(btHelpFileExplorer)))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFileManagement, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlNewName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlOptions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDirectoryNavigation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(pnlFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlNewName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDirectoryNavigation, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFileManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setMnemonic('f');
        fileMenu.setName("fileMenu"); // NOI18N

        selectFolderMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        selectFolderMenuItem.setMnemonic('O');
        selectFolderMenuItem.setName("selectFolderMenuItem"); // NOI18N
        selectFolderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFolderMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(selectFolderMenuItem);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(renamer.UI.RenamerApp.class).getContext().getActionMap(RenamerView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setName("editMenu"); // NOI18N

        renameMenuItem.setMnemonic('r');
        renameMenuItem.setName("renameMenuItem"); // NOI18N
        renameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(renameMenuItem);

        sortMenuItem.setMnemonic('r');
        sortMenuItem.setName("sortMenuItem"); // NOI18N
        sortMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(sortMenuItem);

        menuBar.add(editMenu);

        viewMenu.setMnemonic('e');
        viewMenu.setName("viewMenu"); // NOI18N

        filterOptionsMenuItem.setSelected(true);
        filterOptionsMenuItem.setText(resourceMap.getString("filterOptionsMenuItem.text")); // NOI18N
        filterOptionsMenuItem.setName("filterOptionsMenuItem"); // NOI18N
        filterOptionsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterOptionsMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(filterOptionsMenuItem);

        advancedOptionsMenuItem.setSelected(true);
        advancedOptionsMenuItem.setText(resourceMap.getString("advancedOptionsMenuItem.text")); // NOI18N
        advancedOptionsMenuItem.setName("advancedOptionsMenuItem"); // NOI18N
        advancedOptionsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedOptionsMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(advancedOptionsMenuItem);

        menuBar.add(viewMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        languageMenu.setMnemonic('l');
        languageMenu.setName("languageMenu"); // NOI18N
        languageMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageMenuActionPerformed(evt);
            }
        });

        spanishLanguage.setMnemonic('E');
        spanishLanguage.setSelected(true);
        spanishLanguage.setName("spanishLanguage"); // NOI18N
        spanishLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spanishLanguageActionPerformed(evt);
            }
        });
        languageMenu.add(spanishLanguage);

        englishLanguage.setMnemonic('n');
        englishLanguage.setName("englishLanguage"); // NOI18N
        englishLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishLanguageActionPerformed(evt);
            }
        });
        languageMenu.add(englishLanguage);

        helpMenu.add(languageMenu);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addContainerGap(461, Short.MAX_VALUE))
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(statusMessageLabel)
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void btOpenFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOpenFolderActionPerformed
        File dir = Util.openDirDlg( model.getCurrentDir() );

        if ( dir != null ) {
            model.setCurrentDir( dir );
            updateUI();
        }
    }//GEN-LAST:event_btOpenFolderActionPerformed

    private void cbPrefixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPrefixActionPerformed
        if ( cbPrefix.isSelected() ) {
                edPrefix.setEnabled( true );
                edPrefix.setEditable( true );
                model.setPrefix( "" );
                edPrefix.setText( "" );
                edPrefix.requestFocus();
        } else {
            edPrefix.setEnabled( false );
            edPrefix.setEditable( false );
            model.setPrefix( "" );
            edPrefix.setText( "" );
        }
    }//GEN-LAST:event_cbPrefixActionPerformed

    private void edPrefixCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_edPrefixCaretUpdate
        model.setPrefix( edPrefix.getText() );
        updateUI();
    }//GEN-LAST:event_edPrefixCaretUpdate

    private void selectFolderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFolderMenuItemActionPerformed
        btOpenFolderActionPerformed( evt );
    }//GEN-LAST:event_selectFolderMenuItemActionPerformed

    private void cbRecurseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRecurseActionPerformed
        model.setRecurse( cbRecurse.isSelected() );
    }//GEN-LAST:event_cbRecurseActionPerformed

    private void cbExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbExtActionPerformed
       if ( cbExt.isSelected() ) {
                edExt.setEnabled( true );
                model.setExt( "" );
                edExt.setText( "" );
                edExt.setEditable( true );
                edExt.requestFocus();
        } else {
            edExt.setEnabled( false );
            edExt.setEditable( false );
            model.setExt( "" );
            edExt.setText( "" );
        }
    }//GEN-LAST:event_cbExtActionPerformed

    private void edExtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_edExtCaretUpdate
        model.setExt( edExt.getText() );
        updateUI();
    }//GEN-LAST:event_edExtCaretUpdate

    private void btRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRenameActionPerformed
        File dir = model.getCurrentDir();

        if ( !Util.askYesNo(
                MsgSureRename[ model.getLanguage().ordinal() ]
                + dir.getAbsolutePath() + "'?" )
           )
        {
            return;
        }

        // Do it
        try {
            renameEngine.rename();
        } catch (IOException ex) {
            Util.msgError( ex.getLocalizedMessage() );
        }
        finally {
            this.updateUI();
        }
    }//GEN-LAST:event_btRenameActionPerformed

    private void edNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_edNameCaretUpdate
        model.setNameFmt( edName.getText() );
}//GEN-LAST:event_edNameCaretUpdate

    private void renameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameMenuItemActionPerformed
        btRenameActionPerformed( evt );
}//GEN-LAST:event_renameMenuItemActionPerformed

    private void languageMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languageMenuActionPerformed

    }//GEN-LAST:event_languageMenuActionPerformed

    private void changeUIIntoEnglish()
    {
        model.setLanguage( Model.Language.EN );
        englishLanguage.setSelected( true );
        spanishLanguage.setSelected( false );

        // Menus
        fileMenu.setText( "File" );
        fileMenu.setMnemonic( 'F' );
        selectFolderMenuItem.setText( "Open" );
        selectFolderMenuItem.setMnemonic( 'O' );
        exitMenuItem.setText( "Exit" );
        exitMenuItem.setMnemonic( 'X' );
        editMenu.setText( "Edit" );
        editMenu.setMnemonic( 'E' );
        renameMenuItem.setText( "Rename" );
        renameMenuItem.setMnemonic( 'R' );
        sortMenuItem.setText( "Sort" );
        sortMenuItem.setMnemonic( 'S' );
        helpMenu.setText( "Help" );
        helpMenu.setMnemonic( 'H' );
        aboutMenuItem.setText( "About..." );
        aboutMenuItem.setMnemonic( 'A' );
        languageMenu.setText( "Language" );
        languageMenu.setMnemonic( 'L' );
        spanishLanguage.setText( "Español" );
        spanishLanguage.setMnemonic( 'e' );
        englishLanguage.setText( "English" );
        englishLanguage.setMnemonic( 'n' );
        viewMenu.setText( "View" );
        viewMenu.setMnemonic( 'V' );
        advancedOptionsMenuItem.setText( "Advanced options" );
        advancedOptionsMenuItem.setMnemonic( 'a' );
        filterOptionsMenuItem.setText( "Filter options" );
        filterOptionsMenuItem.setMnemonic( 'f' );


        // Labels
        lblFolder.setText( "Directory" );
        lblNewName.setText( "New name" );
        cbRecurse.setText( "Recurse subdirectories" );
        cbPrefix.setText( "Has prefix" );
        cbExt.setText( "Has extension" );
        cbEliminateSpaces.setText( "Eliminate spaces" );
        cbForceNumbering.setText( "Force numbering" );
        cbSubstituteSpaces.setText( "Substitute spaces" );
        lblStartIn.setText( "Start in" );

        // Buttons
        btRename.setText( "Rename" );
    }

    private void changeUIIntoSpanish()
    {
        model.setLanguage( Model.Language.ES );
        englishLanguage.setSelected( false );
        spanishLanguage.setSelected( true );

        // Menus
        fileMenu.setText( "Archivo" );
        fileMenu.setMnemonic( 'A' );
        selectFolderMenuItem.setText( "Abrir" );
        selectFolderMenuItem.setMnemonic( 'A' );
        exitMenuItem.setText( "Salir" );
        exitMenuItem.setMnemonic( 'S' );
        editMenu.setText( "Editar" );
        editMenu.setMnemonic( 'E' );
        renameMenuItem.setText( "Renombrar" );
        renameMenuItem.setMnemonic( 'R' );
        sortMenuItem.setText( "Ordenar" );
        sortMenuItem.setMnemonic( 'O' );
        helpMenu.setText( "Ayuda" );
        helpMenu.setMnemonic( 'Y' );
        aboutMenuItem.setText( "Acerca de..." );
        aboutMenuItem.setMnemonic( 'A' );
        languageMenu.setText( "Idioma" );
        languageMenu.setMnemonic( 'I' );
        spanishLanguage.setText( "Español" );
        spanishLanguage.setMnemonic( 'e' );
        englishLanguage.setText( "English" );
        englishLanguage.setMnemonic( 'n' );
        viewMenu.setText( "Ver" );
        viewMenu.setMnemonic( 'V' );
        advancedOptionsMenuItem.setText( "Opciones avanzadas" );
        advancedOptionsMenuItem.setMnemonic( 'a' );
        filterOptionsMenuItem.setText( "Opciones de filtro" );
        filterOptionsMenuItem.setMnemonic( 'f' );

        // Labels
        lblFolder.setText( "Directorio" );
        lblNewName.setText( "Nuevo nombre" );
        cbRecurse.setText( "Recursivo en subdirectorios" );
        cbPrefix.setText( "Tiene por prefijo" );
        cbExt.setText( "Tiene extensión" );
        lblStartIn.setText( "Empieza en" );
        cbEliminateSpaces.setText( "Eliminar espacios" );
        cbSubstituteSpaces.setText( "Sustituir espacios" );
        cbForceNumbering.setText( "Forzar numeración" );

        // Buttons
        btRename.setText( "Renombrar" );
    }

    private void listFilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFilesMouseClicked
        int index = listFiles.getSelectedIndex();

        if ( index >= 0
          && evt.getClickCount() == 2 )
        {
            String fileToRename = Model.decode( (String) listFiles.getSelectedValue() );

            File f = RenamingEngine.composeFile( model.getCurrentDir(), fileToRename );
            
            if ( f.isDirectory() ) {
                // Change directory
                model.setCurrentDir( f );
            } else {
                // Rename file
                String newName = Util.askFor(
                                        AppInfo.MsgRename[ model.getLanguage().ordinal() ],
                                        fileToRename
                                 )
                ;

                try {
                    if ( newName != null ) {
                        RenamingEngine.sysRenameFile( f, newName );
                    }
                }
                catch(Exception exc)
                {
                    Util.msgError( exc.getLocalizedMessage() );
                }
            }
            
            updateUI();
        }
    }//GEN-LAST:event_listFilesMouseClicked

    private void spanishLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spanishLanguageActionPerformed
        changeUIIntoSpanish();
    }//GEN-LAST:event_spanishLanguageActionPerformed

    private void englishLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishLanguageActionPerformed
        changeUIIntoEnglish();
    }//GEN-LAST:event_englishLanguageActionPerformed

    private void btHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHelpActionPerformed
        Util.msgInfo( MsgHelp[ model.getLanguage().ordinal() ] );
}//GEN-LAST:event_btHelpActionPerformed

    private void btDirUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDirUpActionPerformed
        model.setCurrentDir( model.getCurrentDir().getParentFile() );
        updateUI();
    }//GEN-LAST:event_btDirUpActionPerformed

    private void btHelpFileExplorerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHelpFileExplorerActionPerformed
         Util.msgInfo( MsgExplorerHelp[ model.getLanguage().ordinal() ] );
}//GEN-LAST:event_btHelpFileExplorerActionPerformed

    private void btRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefreshActionPerformed
        updateUI();
    }//GEN-LAST:event_btRefreshActionPerformed

    private void spinStartStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinStartStateChanged
        model.setStart( ((Integer) spinStart.getValue() ).intValue() );
    }//GEN-LAST:event_spinStartStateChanged

    private void sortMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortMenuItemActionPerformed
        // Sort a directory
        this.initProcess( this.renameEngine.getCurrentFileList().length );
        try {
            this.renameEngine.sort();
        }
        catch(Exception exc)
        {
            Util.msgError( exc.getLocalizedMessage() );
        }
        finally {
            this.updateUI();
        }
}//GEN-LAST:event_sortMenuItemActionPerformed

    private void btDeleteFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteFileActionPerformed
        int index = listFiles.getSelectedIndex();

        try {
            if ( index >= 0 ) {
                File f = new File(
                            model.getCurrentDir()
                            + File.separator
                            + Model.decode( (String) listFiles.getSelectedValue() )
                );

                if ( !Util.askYesNo(
                        MsgSureDelete[ model.getLanguage().ordinal() ]
                        + f.getAbsolutePath() + "'?" )
                   )
                {
                    return;
                }

                RenamingEngine.sysDeleteFile( f );
            }
        }
        catch(Exception exc)
        {
            Util.msgError(  exc.getLocalizedMessage() );
        }
        finally {
            updateUI();
        }
}//GEN-LAST:event_btDeleteFileActionPerformed

    private void cbEliminateSpacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEliminateSpacesActionPerformed
        model.setEliminateSpaces( cbEliminateSpaces.isSelected() );
}//GEN-LAST:event_cbEliminateSpacesActionPerformed

    private void cbSubstituteSpacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSubstituteSpacesActionPerformed
        model.setSubstituteSpaces( cbSubstituteSpaces.isSelected() );
}//GEN-LAST:event_cbSubstituteSpacesActionPerformed

    private void btCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckActionPerformed
        File fileName = new File( ExampleFileName );
        renameEngine.chkFmtName();
        String newFileName = renameEngine.createName( fileName, model.getNameFmt(), 1 );
        edName.setText( model.getNameFmt() );

        Util.msgInfo( '\'' + ExampleFileName + "' >> '" + newFileName + '\'');
}//GEN-LAST:event_btCheckActionPerformed

    private void cbForceNumberingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbForceNumberingActionPerformed
        model.setForceNumbering( cbForceNumbering.isSelected() );
}//GEN-LAST:event_cbForceNumberingActionPerformed

    private void filterOptionsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterOptionsMenuItemActionPerformed
        if ( filterOptionsMenuItem.isSelected() )
                pnlFilter.setVisible( true );
        else    pnlFilter.setVisible( false );
    }//GEN-LAST:event_filterOptionsMenuItemActionPerformed

    private void advancedOptionsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancedOptionsMenuItemActionPerformed
        if ( advancedOptionsMenuItem.isSelected() )
                pnlOptions.setVisible( true );
        else    pnlOptions.setVisible( false );
    }//GEN-LAST:event_advancedOptionsMenuItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JCheckBoxMenuItem advancedOptionsMenuItem;
    private javax.swing.JButton btCheck;
    private javax.swing.JButton btDeleteFile;
    private javax.swing.JButton btDirUp;
    private javax.swing.JButton btHelp;
    private javax.swing.JButton btHelpFileExplorer;
    private javax.swing.JButton btOpenFolder;
    private javax.swing.JButton btRefresh;
    private javax.swing.JButton btRename;
    private javax.swing.JCheckBox cbEliminateSpaces;
    private javax.swing.JCheckBox cbExt;
    private javax.swing.JCheckBox cbForceNumbering;
    private javax.swing.JCheckBox cbPrefix;
    private javax.swing.JCheckBox cbRecurse;
    private javax.swing.JCheckBox cbSubstituteSpaces;
    private javax.swing.JTextField edCurrentDir;
    private javax.swing.JTextField edExt;
    private javax.swing.JTextField edName;
    private javax.swing.JTextField edPrefix;
    private javax.swing.JMenu editMenu;
    private javax.swing.JCheckBoxMenuItem englishLanguage;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JCheckBoxMenuItem filterOptionsMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu languageMenu;
    private javax.swing.JLabel lblFolder;
    private javax.swing.JLabel lblNewName;
    private javax.swing.JLabel lblStartIn;
    private javax.swing.JList listFiles;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel pnlDirectoryNavigation;
    private javax.swing.JPanel pnlFileManagement;
    private javax.swing.JPanel pnlFilter;
    private javax.swing.JPanel pnlNewName;
    private javax.swing.JPanel pnlOptions;
    private javax.swing.JMenuItem renameMenuItem;
    private javax.swing.JMenuItem selectFolderMenuItem;
    private javax.swing.JMenuItem sortMenuItem;
    private javax.swing.JCheckBoxMenuItem spanishLanguage;
    private javax.swing.JSpinner spinStart;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables

    private JDialog aboutBox = null;

    private void updateUI() {
        // Update directory name
        File dir = model.getCurrentDir();
        edCurrentDir.setText( dir.getAbsolutePath() );

        // Update fmtName
        edName.setText( model.getNameFmt() );

        // Update directory files
        DefaultListModel modelList = new DefaultListModel();
        File[] files = renameEngine.getFileList();

        if ( files != null ) {
            this.initProcess( files.length );
            for(File file : files) {
                if ( file.isDirectory() )
                        modelList.addElement( Model.encodeDirs( file.getName() ) );
                else    modelList.addElement( Model.encodeFiles( file.getName() ) );
            }
            listFiles.setEnabled( true );
        } else {
            modelList.addElement( AppInfo.MsgNoFiles[ model.getLanguage().ordinal() ] );
            listFiles.setEnabled( false );
        }

        listFiles.setModel( modelList );
        listFiles.setFont( new Font( "Courier New", Font.PLAIN, 12 ) );
        this.setStatus();
    }

    private void setStatus()
    {
        this.setStatus( MsgReady[ model.getLanguage().ordinal() ] );
    }

    private void setStatus(String txt)
    {
        this.statusMessageLabel.setText( txt );
        this.getFrame().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }

    private void initProcess(int max)
    {
        this.initProcess( MsgWorking[ model.getLanguage().ordinal() ], max );
    }

    private void initProcess(String txt, int max)
    {
        this.setStatus( txt );
        this.getFrame().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        this.getFrame().repaint();
    }
}
